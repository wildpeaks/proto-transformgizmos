#VRML V2.0 utf8

EXTERNPROTO TransformGizmos [
	exposedField  SFInt32     type
	exposedField  SFBool      isLocal
	exposedField  SFNode      target
	exposedField  SFVec3f     containerTranslation
	exposedField  SFRotation  containerRotation
] "../src/proto.TransformGizmos.wrl#TransformGizmos"


###############################################################################
# Usage example
###############################################################################

Viewpoint {
	position 17.968 12.410 23.811
	orientation -0.438 0.898 0.050 0.670
	fieldOfView 0.785
	centerOfRotation 0 0 0
	description "Default"
}


Selection {
	select FALSE
	collide FALSE
	children [
		DEF container Transform {
			translation 8 2 0
			rotation 0.8 0.3 0.2 1
			children DEF target Transform {
				children Inline {
					url "inlines/inline.dummy.wrl"
				}
			}
		}
	]
}


DEF gizmos TransformGizmos {
	containerTranslation 8 2 0
	containerRotation 0.8 0.3 0.2 1
	target USE target

	# Local translate
	isLocal TRUE
	type 0

	# Local rotate
#	isLocal TRUE
#	type 1

	# Global translate
#	isLocal FALSE
#	type 0

	# Global rotate
#	isLocal FALSE
#	type 1
}
ROUTE container.translation TO gizmos.containerTranslation
ROUTE container.rotation TO gizmos.containerRotation


# Grid floor
Selection {
	select FALSE
	collide FALSE
	children [
		Shape {
			appearance Appearance {
				texture ImageTexture {
					url "textures/grid.png"
				}
				textureTransform TextureTransform {
					scale 20 20
				}
			}
			geometry Box {
				size 100 0 100
			}
		}
		Shape {
			appearance Appearance {
				material Material {
					diffuseColor 0 0 0
					emissiveColor 1 1 1
				}
			}
			geometry Box {
				size 100 0.01 0.01
			}
		}
		Shape {
			appearance Appearance {
				material Material {
					diffuseColor 0 0 0
					emissiveColor 1 1 1
				}
			}
			geometry Box {
				size 0.01 100 0.01
			}
		}
		Shape {
			appearance Appearance {
				material Material {
					diffuseColor 0 0 0
					emissiveColor 1 1 1
				}
			}
			geometry Box {
				size 0.01 0.01 100
			}
		}
	]
}

Layer3D {
	size 0.3 1
	viewpoint Viewpoint {
		position 8 0 25
	}
	children [
		Transform {
			translation 0 5 0
			children [
				DEF sensorLocal TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to LOCAL"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 3 0
			children [
				DEF sensorGlobal TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to GLOBAL"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 0 0
			children [
				DEF sensorTranslation TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to TRANSLATE"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 -2 0
			children [
				DEF sensorRotation TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to ROTATE"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}

		Transform {
			translation 0 -5 0
			children [
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 0.5 0.5 0.5
						}
					}
					geometry DEF translationText Text {
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 -6 0
			children [
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 0.5 0.5 0.5
						}
					}
					geometry DEF rotationText Text {
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
	]
}


DEF script Script {
	field    SFInt32     TYPE_NONE          -1
	field    SFInt32     TYPE_TRANSLATE     0
	field    SFInt32     TYPE_ROTATE        1

	field    SFNode      gizmos              USE gizmos
	field    SFNode      translationText     USE translationText
	field    SFNode      rotationText        USE rotationText
	field    SFNode      target              USE target

	eventIn  SFTime      onClickLocal
	eventIn  SFTime      onClickGlobal
	eventIn  SFTime      onClickTranslation
	eventIn  SFTime      onClickRotation

	eventIn  SFVec3f     onTranslation
	eventIn  SFRotation  onRotation

	directOutput TRUE
	url "javascript:

	function onClickLocal(){
		gizmos.isLocal = true;
	}
	function onClickGlobal(){
		gizmos.isLocal = false;
	}
	function onClickTranslation(){
		gizmos.type = TYPE_TRANSLATE;
	}
	function onClickRotation(){
		gizmos.type = TYPE_ROTATE;
	}

	function initialize(){
		updateTexts();
	}
	function updateTexts(){
		translationText.string = new MFString('target.translation: ' + target.translation);
		rotationText.string = new MFString('target.rotation: ' + target.rotation);
	}
	function onTranslation(){
		updateTexts();
	}
	function onRotation(){
		updateTexts();
	}

	"
}

ROUTE sensorLocal.touchTime TO script.onClickLocal
ROUTE sensorGlobal.touchTime TO script.onClickGlobal
ROUTE sensorTranslation.touchTime TO script.onClickTranslation
ROUTE sensorRotation.touchTime TO script.onClickRotation

ROUTE target.translation TO script.onTranslation
ROUTE target.rotation TO script.onRotation
