#VRML V2.0 utf8

EXTERNPROTO TransformGizmos [
	exposedField  SFInt32     type
	exposedField  SFNode      target
] "../src/proto.TransformGizmos.wrl#TransformGizmos"


###############################################################################
# Usage example
###############################################################################

Viewpoint {
	position 17.968 12.410 23.811
	orientation -0.438 0.898 0.050 0.670
	fieldOfView 0.785
	centerOfRotation 0 0 0
	description "Default"
}


Selection {
	select FALSE
	collide FALSE
	children DEF target Transform {
		translation 8 2 0
		rotation 0.8 0.3 0.2 1
		children Inline {
			url "inlines/inline.dummy.wrl"
		}
	}
}


DEF gizmos TransformGizmos {
	target USE target

	# Global translate
#	type 0

	# Global rotate
#	type 1

	# Local translate
#	type 2

	# Local rotate
	type 3
}


# Grid floor
Selection {
	select FALSE
	collide FALSE
	children [
		Shape {
			appearance Appearance {
				texture ImageTexture {
					url "textures/grid.png"
				}
				textureTransform TextureTransform {
					scale 20 20
				}
			}
			geometry Box {
				size 100 0 100
			}
		}
		Shape {
			appearance Appearance {
				material Material {
					diffuseColor 0 0 0
					emissiveColor 1 1 1
				}
			}
			geometry Box {
				size 100 0.01 0.01
			}
		}
		Shape {
			appearance Appearance {
				material Material {
					diffuseColor 0 0 0
					emissiveColor 1 1 1
				}
			}
			geometry Box {
				size 0.01 100 0.01
			}
		}
		Shape {
			appearance Appearance {
				material Material {
					diffuseColor 0 0 0
					emissiveColor 1 1 1
				}
			}
			geometry Box {
				size 0.01 0.01 100
			}
		}
	]
}

Layer3D {
	size 0.3 1
	viewpoint Viewpoint {
		position 8 0 25
	}
	children [
		Transform {
			translation 0 8 0
			children [
				DEF sensorReset TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Reset"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}

		Transform {
			translation 0 5 0
			children [
				DEF sensorGlobalTranslate TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to GLOBAL TRANSLATE"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 3 0
			children [
				DEF sensorGlobalRotate TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to GLOBAL ROTATE"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 0 0
			children [
				DEF sensorLocalTranslate TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to LOCAL TRANSLATE"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 -2 0
			children [
				DEF sensorLocalRotate TouchSensor {}
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 1 1 1
						}
					}
					geometry Text {
						string "Switch to LOCAL ROTATE"
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 -5 0
			children [
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 0.5 0.5 0.5
						}
					}
					geometry DEF translationText Text {
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
		Transform {
			translation 0 -6 0
			children [
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0 0 0
							emissiveColor 0.5 0.5 0.5
						}
					}
					geometry DEF rotationText Text {
						fontStyle FontStyle {
							family "Arial"
							style "BOLD USE_TEXTURE"
						}
					}
				}
			]
		}
	]
}


DEF script Script {
	field    SFNode      gizmos              USE gizmos
	field    SFNode      translationText     USE translationText
	field    SFNode      rotationText        USE rotationText
	field    SFNode      target              USE target

	eventIn  SFTime      onReset
	eventIn  SFTime      onClickGlobalTranslate
	eventIn  SFTime      onClickGlobalRotate
	eventIn  SFTime      onClickLocalTranslate
	eventIn  SFTime      onClickLocalRotate

	eventIn  SFVec3f     onTranslation
	eventIn  SFRotation  onRotation

	directOutput TRUE
	url "javascript:

	function onReset(){
		target.translation = new SFVec3f();
		target.rotation = new SFRotation();
	}

	function onClickGlobalTranslate(){
		gizmos.type = 0;
	}
	function onClickGlobalRotate(){
		gizmos.type = 1;
	}
	function onClickLocalTranslate(){
		gizmos.type = 2;
	}
	function onClickLocalRotate(){
		gizmos.type = 3;
	}

	function updateTexts(){
		translationText.string = new MFString('target.translation: ' + target.translation);
		rotationText.string = new MFString('target.rotation: ' + target.rotation);
	}
	function initialize(){
		updateTexts();
	}
	function onTranslation(){
		updateTexts();
	}
	function onRotation(){
		updateTexts();
	}

	"
}

ROUTE sensorReset.touchTime TO script.onReset
ROUTE sensorGlobalTranslate.touchTime TO script.onClickGlobalTranslate
ROUTE sensorGlobalRotate.touchTime TO script.onClickGlobalRotate
ROUTE sensorLocalTranslate.touchTime TO script.onClickLocalTranslate
ROUTE sensorLocalRotate.touchTime TO script.onClickLocalRotate

ROUTE target.translation TO script.onTranslation
ROUTE target.rotation TO script.onRotation
